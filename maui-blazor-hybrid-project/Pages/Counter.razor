@page "/counter"
<div>
    @foreach(var item in errors)
    {
        <span style="background-color:aqua">@item</span>
    }
    <h1>Counter</h1>

    <p role="status">Current count: @currentCount</p>
    <button @onclick="IncrementCount">Increment</button>
</div>

@code {
    private int currentCount = 0;
    public List<string> errors = new List<string>();

    private void IncrementCount()
    {
        currentCount++;
    }
    public void TakePic()
    {
        CameraTakingAPic();
    }
    async void CameraTakingAPic()
    {
        try
        {
            if (MediaPicker.Default.IsCaptureSupported)
            {
                /*FileResult photo = await MediaPicker.Default.CapturePhotoAsync();
                    if (photo != null)
                    {
                    string localFilePath = Path.Combine(FileSystem.CacheDirectory, photo.FileName);
                    using Stream sourceStream = await photo.OpenReadAsync();
                    using FileStream localFileStream = File.OpenWrite(localFilePath);
                    await sourceStream.CopyToAsync(localFileStream);
                }*/
                var photo = await MediaPicker.Default.CapturePhotoAsync();
                if (photo != null)
                {
                    string localFilePath = Path.Combine(FileSystem.CacheDirectory, photo.FileName = "bat.jpg");
                    var sourceStream = await photo.OpenReadAsync();
                    var localFileStream = File.OpenWrite(localFilePath);
                    await sourceStream.CopyToAsync(localFileStream);
                }
            }
        }catch(Exception ex)
        {
            errors.Add($"Source of exeption: {ex.Source.ToString()}\n Message of exeption: {ex.Message.ToString()}");
        }    
    }
}